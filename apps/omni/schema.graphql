type Movie {
  title: String!
  posterUrl: String
  adult: Boolean
  overview: String
  releaseDate: String
  id: ID!
  originalTitle: String
  backdropUrl: String
  popularity: Float
  matches: [User] # Followers that have this movie watchlisted
  genres: [Genre]
  inWatchlist: Boolean
}

type User {
  id: ID!
  name: String!
  image: String
  email: String!
  matches: [Movie]
  isFollowing: Boolean
  isFollower: Boolean
  followers: [User]
  following: [User]
}

type Genre {
  id: ID!
  name: String!
}

type Query {
  user(id: ID!): User
  movie(id: ID!): Movie
  watchlist: [Movie]
  moviesByGenre(genreId: ID!): [Movie]
  search(query: String!): [Movie]
  searchUsers(nameQuery: String!): [User]
  genres: [Genre]
}

type Mutation {
  addMovieToWatchlist(movieId: ID!): Movie
  removeMovieFromWatchlist(movieId: ID!): Movie
  follow(friendId: ID!): User
  unfollow(friendId: ID!): User
}
